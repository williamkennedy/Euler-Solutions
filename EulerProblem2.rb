#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fib(n)
  i = 1
  num1 = 1
  num2 = 2
  fib = [num1]
  
  until i >= n do
      fib.push(num2)
      num = num1
      num2 = num1 + num2
      num1 = num2 - num
      i += 1
  end
fib
  
end

#puts fib(10) print out the array

def fib_sum_even(fib, max)
  even_num = []
  fib.each do |n|
    if n % 2 == 0 && n <= max
      even_num.push(n)
    end
  end
  #  puts even_num.count
    puts even_num.inspect
    even_num.reduce(:+)
end

puts fib_sum_even(fib(100),4000000)
  

  